# Confirm shared object copying when building the Python package
# https://github.com/single-cell-data/TileDB-SOMA/pull/1937

name: Python SO copying

on:
  push:
    paths:
      - '.github/workflows/python-so-copying.yml'
      - 'apis/python/**'
      - 'libtiledbsoma/cmake/**'
  pull_request:
    paths:
      - '.github/workflows/python-so-copying.yml'
      - 'apis/python/**'
      - 'libtiledbsoma/cmake/**'
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    steps:
      - name: Docker image info
        run: |
          uname -a
          cat /etc/lsb-release
      - name: Setup
        run: |
          apt-get update
          apt-get install --yes cmake git python-is-python3 python3 python3-pip python3-venv unzip wget
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # for setuptools-scm
      - name: Configure Git
        run: |
          # This is a permissions quirk due to running Git as root inside of a Docker container
          git config --global --add safe.directory $(pwd)
          git branch
      - name: Setup Python
        run: |
          python --version
          python -m venv ./venv-soma
          ./venv-soma/bin/python -m pip install --prefer-binary pybind11-global typeguard sparse wheel
          ./venv-soma/bin/python -m pip list
      - name: Build wheel
        run: |
          cd apis/python
          ../../venv-soma/bin/python setup.py bdist_wheel
      - name: Inspect wheel
        run: unzip -l apis/python/dist/tiledbsoma-*.whl | grep '\.so'
      - name: Install wheel
        run: ./venv-soma/bin/python -m pip install --prefer-binary apis/python/dist/tiledbsoma-*.whl
      - name: Runtime test
        run: ./venv-soma/bin/python -c "import tiledbsoma; print(tiledbsoma.pytiledbsoma.version())"
      - name: Check RPATH
        run: readelf -d ./venv-soma/lib/python*/site-packages/tiledbsoma/pytiledbsoma.*.so  | grep R*PATH
      - name: Search for shared objects
        run: find . -name '*tile*.so'
      - name: Confirm linking to installed shared objects
        run: |
          rm -fr build/ dist/ apis/python/build apis/python/src/tiledbsoma/*tile*.so.*
          find . -name '*tile*.so.*' # should only show shared objects installed in virtual env
          ./venv-soma/bin/python -c "import tiledbsoma; print(tiledbsoma.pytiledbsoma.version())"
